@page "/"
@using DeepWorkTracker.Core.Contracts.Services

<PageTitle>Deep Work Tracker</PageTitle>

@if (!GlobalStates.IsFocusModeEnabled)
{
    <table>
        <thead>
            <tr style="font-weight: bold">
                <th style="border-top-left-radius:10px">Date</th>
                <th>Start</th>
                <th>End</th>
                <th>Context Switches</th>
                <th>Tasks</th>
                <th>Output</th>
                <th>Focus Score</th>
                <th>Deep Work Hours</th>
                <th>Intensity of Focus</th>
                <th style="border-top-right-radius:10px">High-Quality Work Produced</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var entry in DataSource)
            {
                <tr>
                    <th>@entry.Date.ToString("dd.MM.yyyy")</th>
                    <th>@entry.StartTime</th>
                    <th>@entry.EndTíme</th>
                    <th>@entry.ContextSwitches</th>
                    <th>@entry.FinishedTasks</th>
                    <th>@entry.Output @(GetOutputUnitSymbol(entry))</th>
                    <th>@(entry.FocusScore * 100)%</th>
                    <th style="border: solid 2px black">
                        <p style="@GetGenericRateColor(entry.DeepWorkHours.Value, PreviousEntry != null ? PreviousEntry.DeepWorkHours.Value : -1)">
                            @(@GetGenericRate(entry.DeepWorkHours.Value, PreviousEntry != null ? PreviousEntry.DeepWorkHours.Value : -1))
                        </p>
                    </th>
                    <th style="border: solid 2px black">
                        <p style="@GetGenericRateColor(entry.IntensityOfFocus.Value, PreviousEntry != null ? PreviousEntry.IntensityOfFocus.Value : -1)">
                            @(@GetGenericRate(entry.IntensityOfFocus.Value, PreviousEntry != null ? PreviousEntry.IntensityOfFocus.Value : -1))
                        </p>
                    </th>
                    <th style="border: solid 2px black">
                        <p style="@GetGenericRateColor(entry.HighQualityWorkProduced.Value, PreviousEntry != null ? PreviousEntry.HighQualityWorkProduced.Value : -1)">
                            @(@GetGenericRate(entry.HighQualityWorkProduced.Value, PreviousEntry != null ? PreviousEntry.HighQualityWorkProduced.Value : -1))
                        </p>
                    </th>
                </tr>
                PreviousEntry = entry;
            }
        </tbody>
    </table>

    <div style="height:150px"></div>

    <button class="focusButton" onclick="@StartDeepWorkSession">
        Focus
    </button>

    <div style="height:25px"></div>
    <ul>
        <li style="padding-bottom: 1px"><strong>Deep Work Hours</strong> = End - Start</li>
        <li><strong>Output per Hour</strong> = Output / 60</li>
        <li><strong>Intensity of Work</strong> = (Tasks * Output) / (Context Switches + 1)</li>
        <li><strong>High-Quality Work Produced</strong> = Deep Work Hours * Intensity of Work</li>
    </ul>
} else
{
    
}